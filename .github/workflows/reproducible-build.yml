name: reproducible-build
on: [push, pull_request]
jobs:
  build:
    if: contains(github.event.head_commit.message, '[')
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04]
        index: [0, 1]
        var: [local, docker, arxiv]
    steps:
      - name: Set up Git repository
        uses: actions/checkout@v2
      - if: ${{ matrix.var }} == 'local'
        name: install prerequisites
        run: |
          sudo apt-get update
          sudo apt-get install -y python3-venv
          make ARGS=--full
      - if: ${{ matrix.var }} == 'docker'
        name: Build/Run Docker code
        run: make docker ARGS=--full
      - if: ${{ matrix.var }} == 'arxiv'
        run: make arxiv ARXIV_ID=$(echo ${{ github.event.head_commit.message }} | awk -F'[][]' '{print $2}')
      - name: Upload pdf for comparison
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.var }}-${{ matrix.os }}-${{ matrix.index }}
          path: ./ms.pdf
  compare-release-assets:
    needs: [build]
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        os: [ubuntu-20.04]
        var: [local, docker, arxiv]
    steps:
      - name: Download pdfs from build
        uses: actions/download-artifact@v2
      - name: Compare pdf binaries
        run: diff ${{ matrix.var }}-${{ matrix.os }}-0/ms.pdf ${{ matrix.var }}-${{ matrix.os }}-1/ms.pdf
  release:
    needs: [compare-release-assets]
    runs-on: ubuntu-20.04
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }} 
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v1
          release_name: Release v1
          draft: false
          prerelease: false
  upload-release-assets:
    needs: [release]
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        os: [ubuntu-20.04]
        var: [local, docker, arxiv]
    steps:
      - name: Download pdfs from build
        uses: actions/download-artifact@v2
      - name: Create sha256sum var
        run: echo "::set-env name=sha256sumvar::$(sha256sum ${{ matrix.var }}-${{ matrix.os }}-0/ms.pdf | cut -d ' ' -f 1)"
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.release.outputs.upload_url }} 
          asset_path: ./${{ matrix.var }}-${{ matrix.os }}-0/ms.pdf
          asset_name: ${{ matrix.var }}-${{ matrix.os }}-${{ env.sha256sumvar }}.pdf
          asset_content_type: application/pdf
